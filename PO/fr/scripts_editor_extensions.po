# Module scripts_editor_extensions translation file for language=en
# Copyright (C) 2004 Archaeopteryx Software, Inc.
# Wing Python IDE -- wingware.com
#
msgid ""
msgstr ""
"Project-Id-Version: 2.0.1\n"
"POT-Creation-Date: 2020-05-13 12:04+EDT\n"
"PO-Revision-Date: 2018-04-23 02:22+0200\n"
"Last-Translator: Jean Sanchez <js.fr@protonmail.ch>\n"
"Language-Team: None\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.5\n"
"X-Generator: Poedit 2.0.7\n"

#: scripts/editor-extensions.py:1
msgid ""
"Editor extensions that also serve as examples for scripting Wing.\n"
"\n"
"See the Scripting chapter of the manual for more information on writing \n"
"and using scripts.\n"
"\n"
"Copyright (c) 2005-2015, Wingware All rights reserved.\n"
"Copyright (c) 2005, Ken Kinder All rights reserved.\n"
"\n"
"Permission is hereby granted, free of charge, to any person obtaining\n"
"a copy of this software and associated documentation files (the\n"
"\"Software\"), to deal in the Software without restriction, including\n"
"without limitation the rights to use, copy, modify, merge, publish,\n"
"distribute, sublicense, and/or sell copies of the Software, and to\n"
"permit persons to whom the Software is furnished to do so, subject to\n"
"the following conditions:\n"
"\n"
"The above copyright notice and this permission notice shall be\n"
"included in all copies or substantial portions of the Software.\n"
"\n"
"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n"
"EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n"
"MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n"
"IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n"
"CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n"
"TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n"
"SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
"\n"
"Notes:\n"
"\n"
"* sort_selected() was contributed by Ken Kinder\n"
"* Improved title_case() and auto-selection contributed by\n"
"  Yves Bastide\n"
"* Parts of toggle_case() thanks to Ram Rachum\n"
"\n"
msgstr ""

#: scripts/editor-extensions.py:66
msgid ""
"Delete the line or range of lines that contain the current selection.\n"
"  This duplicates what the editor command delete-line does."
msgstr ""
"Supprimer la ligne ou la plage de lignes qui contient la sélection "
"courante.\n"
"   Cela duplique ce que la commande d'éditeur delete-line fait."

#: scripts/editor-extensions.py:85
msgid ""
"Toggle block comment (with ## at start) on the selected lines in editor.\n"
"  This is a different style of block commenting than Wing implements by "
"default\n"
"  (the default in Wing is intended to work better with some of the other\n"
"  editor functionality)"
msgstr ""
"Basculer un bloc en commentaire (avec ## au début) sur les lignes "
"sélectionnées\n"
"  dans l'éditeur. C'est un style différent de commentaires de bloc que "
"Wing \n"
"  implémente par défaut (par défaut Wing est prévu de mieux fonctionner \n"
"  avec d'autres fonctionnalités de l'éditeur)"

#: scripts/editor-extensions.py:129
msgid ""
"Change between text-marking and non-text-marking mode.  Style is\n"
"  \"char\" for stream select, \"block\" for rectangular select, and \"line\" "
"for line select.\n"
"  Set select_right=1 to select the character to right of the cursor\n"
"  when marking is toggled on."
msgstr ""

#: scripts/editor-extensions.py:158
msgid ""
"Bring cursor to start of line, to start of visible area, or to \n"
"  start of document each successive consecutive invocation of this\n"
"  command."
msgstr ""
"Apporter le curseur au début de la ligne, au début de la zone visible,\n"
"   ou au début du document à chaque invocation consécutive successive\n"
"   de cette commande."

#: scripts/editor-extensions.py:193
msgid ""
"Bring cursor to end of line, to end of visible area, or to \n"
"  end of document each successive consecutive invocation of this\n"
"  command."
msgstr ""
"Apporter le curseur à la fin de la ligne, à la fin de la zone visible,\n"
"   ou à la fin du document à chaque invocation consécutive successive\n"
"   de cette commande."

#: scripts/editor-extensions.py:309
#, fuzzy
msgid "Transform current selections or current word with the given callback "
msgstr "Modifier toute la sélection actuelle ou le mot actuel en minuscule"

#: scripts/editor-extensions.py:343
msgid "Change current selection or current word to all lower case"
msgstr "Modifier toute la sélection actuelle ou le mot actuel en minuscule"

#: scripts/editor-extensions.py:352
msgid "Change current selection or current word to all upper case"
msgstr "Modifier toute la sélection actuelle ou le mot actuel en majuscule"

#: scripts/editor-extensions.py:362
msgid ""
"Change current selection or current word to capitalize first letter of each "
"word"
msgstr ""
"Modifier la sélection actuelle ou le mot actuel en passant en majuscule la "
"première lettre de chaque mot"

#: scripts/editor-extensions.py:365
msgid "A better version of string.capwords"
msgstr "Une meilleure version de string.capwords"

#: scripts/editor-extensions.py:375
msgid ""
"Toggle current selection or current word between common name formats: "
"my_symbol_name,\n"
"  MySymbolName, and mySymbolName"
msgstr ""
"Basculer la sélection actuelle ou le mot actuel entre les formats de noms "
"communs:\n"
"  my_symbol_name, MySymbolName et mySymbolName"

#: scripts/editor-extensions.py:399
msgid ""
"Change hyphens (dashes) to underscores in current selection or current word"
msgstr ""

#: scripts/editor-extensions.py:409
msgid ""
"Change underscores to hyphens (dashes) in current selection or current word"
msgstr ""

#: scripts/editor-extensions.py:419
#, fuzzy
msgid ""
"Surround selected text with (), [], {}, \"\", '', <>, or \\`\\`.  Arg char\n"
"  should be the opening character.  If there is no selection, the current\n"
"  word is surrounded."
msgstr ""
"Entourer le texte sélectionné avec (), [], {}, \"\", '', <>, or \\`\\`."

#: scripts/editor-extensions.py:439
msgid "Sort selected lines of text alphabetically"
msgstr "Trier alphabétiquement les lignes de texte sélectionnées"

#: scripts/editor-extensions.py:470
msgid "Copy the filename for the currently selected file to the clipboard"
msgstr ""
"Copier le nom de fichier pour le fichier sélectionné actuellement dans le "
"presse-papier"

#: scripts/editor-extensions.py:476
msgid "Paste from clipboard after removing any >>> and ... prompts"
msgstr ""
"Coller depuis le presse-papier après avoir enlevé toutes les invites >>> "
"et ..."

#: scripts/editor-extensions.py:505
msgid "Modified tab indentation command that acts like tab in Visual Studio."
msgstr ""
"Commande d'indentation des tabulations modifiée agissant comme les "
"tabulations dans Visual Studio."

#: scripts/editor-extensions.py:554
msgid "Convert the current editor to use CR + LF style line endings"
msgstr ""
"Convertir l'éditeur courant à utiliser des fins de ligne de type CR + LF"

#: scripts/editor-extensions.py:561
msgid "Convert the current editor to use CR style line endings"
msgstr "Convertir l'éditeur courant à utiliser des fins de ligne de type CR"

#: scripts/editor-extensions.py:568
msgid "Convert the current editor to use LF style line endings"
msgstr "Convertir l'éditeur courant à utiliser des fins de ligne de type LF"

#: scripts/editor-extensions.py:578
msgid ""
"Fold up all Python methods, expand all classes, and leave other fold\n"
"  points alone"
msgstr ""
"Replier toutes les méthodes Python, développer toutes les classes, et\n"
"   laisser les autres points de repliement seuls"

#: scripts/editor-extensions.py:618
msgid "Fold up all Python classes but leave other fold points alone"
msgstr ""
"Replier toutes les classes Python mais laisser les autres points de "
"repliement seuls"

#: scripts/editor-extensions.py:635
msgid ""
"Fold up all Python classes, methods, and functions but leave other fold\n"
"  points alone"
msgstr ""
"Replier toutes les classes, méthodes et fonctions Python mais laisser\n"
"   les autres points de repliement seuls"

#: scripts/editor-extensions.py:653
msgid "Approximation of zr key binding in vim"
msgstr "Approximation du raccourci clavier zr dans vim"

#: scripts/editor-extensions.py:667
msgid "Approximation of zm key binding in vim"
msgstr "Approximation du raccourci clavier zm dans vim"

#: scripts/editor-extensions.py:720
msgid ""
"Insert a print statement to print a selected variable name and\n"
"  value, along with the file and line number."
msgstr ""
"Insérer une instruction d’impression pour imprimer un nom de \n"
"   variable sélectionnés et leurs valeurs, ainsi que le fichier et le numéro "
"de ligne."

#: scripts/editor-extensions.py:751
msgid ""
"Do a search on the Python documentation for the selected text\n"
"  in the current editor"
msgstr ""
"Réalise une recherche dans la documentation Python pour le\n"
"    texte sélectionné dans l'éditeur courant"

#: scripts/editor-extensions.py:766
msgid "Add a debug watch for the selected text in the current editor"
msgstr ""
"Ajouter une surveillance de débogage pour le texte sélectionné dans "
"l'éditeur de texte actuel"

#: scripts/editor-extensions.py:780
#, fuzzy
msgid ""
"Check the current file out of clearcase.  This is best used with Wing\n"
"  configured to auto-reload unchanged files."
msgstr "Vérifier que le fichier actuel est..."

#: scripts/editor-extensions.py:793
msgid ""
"If editor is split, unsplit it and show the vertical tools panel.\n"
"    Otherwise, hide the vertical tools and split the editor left-right\n"
"    Assumes default windowing policy (combined toolbox & editor windows).\n"
"    Thanks to Jonathan March for this script."
msgstr ""
"Si l'éditeur est divisé, dé-divisé le et affiche le panneau vertical "
"d'outils.\n"
"    Autrement, cacher les outils verticaux et divisez l'éditeur gauche-"
"droite\n"
"    Assume la politique de fenêtrage par défaut (Boîte à outils & fenêtres "
"d'éditeur).\n"
"    Merci à Jonathan March pour ce script."

#: scripts/editor-extensions.py:807
msgid ""
"Toggle between moving the toolboxes to a separate window and\n"
"    the default single-window mode"
msgstr ""
"Basculer entre déplacer les boites à outils vers une fenêtre séparée\n"
"   et le mode part défaut simple-fenêtre"

#: scripts/editor-extensions.py:817
msgid ""
"Insert spaces to reach the next tab stop (units of given tab size\n"
"  or editor's tab size if none is given)"
msgstr ""
"Insérer des espaces pour atteindre l'arrêt suivant de tabulation\n"
"   (unités de taille de tabulation données ou la taille de tabulation\n"
"   de l'édietuer est none si donné)"

#: scripts/editor-extensions.py:842
msgid ""
"Insert given text at current caret location, replacing any existing \n"
"  selected text"
msgstr ""
"Insérer le texte donné à l'emplacement actuel du curseur,\n"
"   remplacant tout texte sélectionné existant"

#: scripts/editor-extensions.py:853
msgid ""
"Enter a newline, indent to match previous line and insert a comment\n"
"  character and a space.  Assumes that auto-indent is enabled."
msgstr ""
"Entrer une nouvelle ligne, l'indent correspondant à la ligne précédente \n"
"   et insérer un caractère de commentaire et un espace. En admettant \n"
"   que l'indentation automatique est activée."

#: scripts/editor-extensions.py:917
msgid "Provide simple word-list driven auto-completion on the current editor"
msgstr ""
"Fournir une liste de mots simple entrainant l'auto-complétion dans l'éditeur "
"actuel"

#: scripts/editor-extensions.py:946
msgid "Word"
msgstr "Mot"

#: scripts/editor-extensions.py:948
msgid "Word:"
msgstr "Mot :"

#: scripts/editor-extensions.py:960
msgid ""
" Display the commands that a key is bound to in the status area.  Does\n"
"  not fully work for the vi binding. "
msgstr ""
" Afficher les commandes auxquelles une touche est liée dans la zone de "
"statuts.\n"
"   Ne fonctionne pas entièrement pour les raccourcis clavier vi. "

#: scripts/editor-extensions.py:967 scripts/editor-extensions.py:994
msgid " is not bound"
msgstr " n’est pas est lié"

#: scripts/editor-extensions.py:992
msgid " is bound to "
msgstr " est lié à "

#: scripts/editor-extensions.py:999
msgid "Key"
msgstr "Touche"

#: scripts/editor-extensions.py:1001
msgid "Press Key(s) then Enter"
msgstr "Appuyer sur une (des) touche(s) puis Entrée"

#: scripts/editor-extensions.py:1006
msgid ""
" Variant of emacs style kill-line command that always kills the eol \n"
"  characters "
msgstr ""

#: scripts/editor-extensions.py:1025
msgid ""
"Copy 'filename, lineno (scope)' optionally followed by the current line\n"
"  or selected lines to the clipboard.  The scope is omitted if there isn't\n"
"  one or in a non-Python file."
msgstr ""
"Copier ‘filename, lineno (portée)’, optionellement suivi par la ligne\n"
"  actuelle ou les lignes sélectionnées dans le presse papier.\n"
"  La portée est omise si il n’y a pas un seul ou dans un fichier non-Python."

#: scripts/editor-extensions.py:1063
msgid ""
"Implement a variant of clipboard copy that copies the whole\n"
"  current line if there is no selection on the editor."
msgstr ""
"Implémente une variante de la copie du presse-papier qui copie\n"
"   la ligne actuelle entière si il n'y a pas de sélection dans l'éditeur."

#: scripts/editor-extensions.py:1092
msgid ""
"Implement a variant of clipboard cut that cuts the whole\n"
"  current line if there is no selection on the editor."
msgstr ""
"Implémente une variante de la coupe du presse-papier qui coupe\n"
"   la ligne actuelle entière si il n'y a pas de sélection dans l'éditeur."

#: scripts/editor-extensions.py:1131
msgid ""
" A variant of paste that inserts line just copied with smart-copy above\n"
"  current line. "
msgstr ""
" Une variante de collet qui insère une ligne juste copiée avec la\n"
"  copie-intelligente au-dessus de la ligne actuelle. "

#: scripts/editor-extensions.py:1189
msgid "Open the url at caret in the current editor"
msgstr "Ouvrir l’url au curseur dans l’éditeur actuel"

#: scripts/editor-extensions.py:1198
msgid "Open the url being clicked in the current editor"
msgstr "Ouvrir l’url qui est cliquée dans l’éditeur actuel"

#: scripts/editor-extensions.py:1210
msgid "Open the filename at the caret in current editor"
msgstr "Ouvrir le nom de fichier au curseur dans l’éditeur actuel"

#: scripts/editor-extensions.py:1219
msgid "Open the filename being clicked in the current editor"
msgstr "Ouvrir le nom de fichier qui est cliqué dans l’éditeur actuel"

#: scripts/editor-extensions.py:1231
msgid "Initial batch search for the current editor's directory"
msgstr ""

#: scripts/editor-extensions.py:1243
msgid " Close all readonly files "
msgstr " Fermer tous les fichiers en lecture seule "

#: scripts/editor-extensions.py:1273
msgid ""
" Set the current file's executable bit in its permissions.  If set_bit\n"
"  is true (the default), the executable bit is set; if set_bit is false,\n"
"  the executable bit is cleared.  This doesn't do anything on windows. "
msgstr ""
